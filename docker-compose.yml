version: '3.8'

services: 
  frontend:
    stdin_open: true 
    tty: true 
    build: 
      context: client
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
  

  backend:
    depends_on:
      - db
    stdin_open: true
    tty: true 
    build: 
      context: backend
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    links:
      - db
    restart: on-failure
    networks:
      - backend

  db:
    image: mongo:5.0.2
    stdin_open: true
    tty: true 
    ports:
      - '27017:27017'
    volumes:
      - mongo-db:/data/db
    networks:
      - backend

volumes:
  mongo-db:
networks:
  frontend:
  backend:


# version: '3.8'

# services: 
#   backend:
#     build: 
#       context: backend
#       dockerfile: Dockerfile
     
#     ports:
#       - '4000:4000'
#   frontend:
#     build: 
#       context: client
#       dockerfile: Dockerfile
#     ports:
#       - '3000:3000'
#   dbImage:
#     build: 
#       dockerfile: db.Dockerfile
#   db:
#     image: postgres:14.1-alpine
#     restart: always
#     environment:
#       - POSTGRES_USER=postgres
#       - POSTGRES_DB=postgres
#       - POSTGRES_PASSWORD=postgres
#     ports:
#       - '5432:5432'
#     volumes:
#       - db:/var/lib/postgresql/data
# volumes:
#   db: